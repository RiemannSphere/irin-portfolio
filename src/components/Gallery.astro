---
import Card from "../components/Card.astro";

interface GalleryItem {
    id: number;
    title: string;
    image: string;
    medium: string;
    dimensions: string;
    year: string;
}

const galleryItems: GalleryItem[] = [
    { id: 1,title: "Golden Cat", image: "https://r2.hexe-irin.com/Irin_Golden_Cat_A5_40.small.webp", medium: "Acrylics on paper", dimensions: "A5", year: "2022" },
    { id: 2, title: "Psychedelic Pigeon", image: "https://r2.hexe-irin.com/Irin_Psychedelic_Pigeon_10x15_30.small.webp", medium: "Acrylic markers on wood board", dimensions: "10x15 cm", year: "2023" },
    { id: 3, title: "Chic Cat", image: "https://r2.hexe-irin.com/Irin_Chic_Cat_10x15_30.small.webp", medium: "Acrylics and acrylic markers on canvas board", dimensions: "10x15 cm", year: "2022" },
    { id: 4, title: "Baby Phoenix", image: "https://r2.hexe-irin.com/Irin_Baby_Phoenix_10x10_25.small.webp", medium: "Acrylic markers on canvas board", dimensions: "10x10 cm", year: "2022" },
    { id: 5, title: "Jelly Fish", image: "https://r2.hexe-irin.com/Irin_Jelly_Fish_10x10_25.small.webp", medium: "Acrylic markers on canvas board", dimensions: "10x10 cm", year: "2022" },
    { id: 6, title: "Scarab", image: "https://r2.hexe-irin.com/Irin_Scarab_8x10_15.small.webp", medium: "Acrylic markers on canvas board", dimensions: "8x10 cm", year: "2022" },
    { id: 7, title: "Rooster", image: "https://r2.hexe-irin.com/Irin_Rooster_10x10_25.small.webp", medium: "Acrylic markers on canvas board", dimensions: "10x10 cm", year: "2022" },
    { id: 8, title: "Pumpkins", image: "https://r2.hexe-irin.com/Irin_Pumpkins_10x10_25.small.webp", medium: "Acrylic markers on canvas board", dimensions: "10x10 cm", year: "2022" },
    { id: 9, title: "City Pigeon", image: "https://r2.hexe-irin.com/Irin_City_Pigeon_10x10_25.small.webp", medium: "Acrylic markers on canvas board", dimensions: "10x10 cm", year: "2022" },
    { id: 10, title: "Koi", image: "https://r2.hexe-irin.com/Irin_Koi_10x10_25.small.webp", medium: "Acrylic markers on canvas board", dimensions: "10x10 cm", year: "2022" }
];

---

<div class="gallery">
    <div class="gallery-title">Gallery</div>
    
    <div class="loading-spinner" id="loadingSpinner">
        <div class="spinner"></div>
        <p>Loading gallery...</p>
    </div>
    
    <div class="gallery-images" id="galleryImages" style="display: none;">
        {galleryItems.map(item => (
            <Card
                id={`gallery-item-${item.id}`}
                title={item.title} 
                image={item.image} 
                medium={item.medium} 
                dimensions={item.dimensions} 
                year={item.year} 
            />
        ))}
    </div>

    <div class="gallery-item-modal" id="gallery-item-modal" style="display: none;">
        <div class="gallery-item-modal-content">
            <img id="gallery-item-modal-image" class="gallery-item-modal-image" src="" alt="">
            <svg id="close-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="close-icon"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
        </div>
    </div>
</div>

<script define:vars={{ galleryItems }} defer type="module">

    function preloadImages() {
        const loadingSpinner = document.getElementById('loadingSpinner');
        const galleryImages = document.getElementById('galleryImages');
        
        if (!loadingSpinner || !galleryImages) {
            console.error('Loading spinner or gallery images not found');
            return;
        }

        const imageUrls = galleryItems.map(item => item.image);

        let loadedCount = 0;
        const totalImages = imageUrls.length;

        function incrementLoadedCount() {
            loadedCount++;
            if (loadedCount === totalImages) {
                loadingSpinner.style.display = 'none';
                galleryImages.style.display = 'grid';
            }
        }

        imageUrls.forEach(url => {
            const img = new Image();
            img.onload = incrementLoadedCount;
            img.onerror = incrementLoadedCount;
            img.src = url;
        });
    }

    function openGalleryItemOnClick() {
        const galleryItemsNodes = document.querySelectorAll('[id^="gallery-item-"]');
        const closeIcon = document.getElementById('close-icon');
        for (const itemNode of galleryItemsNodes) {
            itemNode.addEventListener('click', () => {
                const itemId = itemNode.id.split('-')[2];
                const item = galleryItems.find(item => item.id === parseInt(itemId));
                if (item) {
                    const galleryItemModal = document.getElementById('gallery-item-modal');
                    const galleryItemModalImage = document.getElementById('gallery-item-modal-image');
                    galleryItemModalImage.src = item.image;
                    galleryItemModal.style.display = 'block';
                }
            });
        }

        closeIcon.addEventListener('click', () => {
            const galleryItemModal = document.getElementById('gallery-item-modal');
            galleryItemModal.style.display = 'none';
        });
    }

    preloadImages();
    openGalleryItemOnClick();
</script>

<style>
    .gallery {
        max-width: 950px;
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--sp);
        padding: var(--sp-2);
    }

    .gallery-title {
        font-weight: 600;
        font-size: var(--sp-2);
        letter-spacing: 1px;
        color: var(--color-text);
        text-align: center;
        margin: 0;
    }

    .gallery-images {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: var(--sp-2);
        padding: var(--sp-2);
        width: 100%;
    }

    .loading-spinner {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: var(--sp-4);
        gap: var(--sp);
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid var(--color-muted);
        border-top: 4px solid var(--color-text);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    .loading-spinner p {
        color: var(--color-text);
        margin: 0;
        font-size: var(--sp);
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .gallery-item-modal {
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
        animation: fadeIn 0.3s ease-in-out;
        width: 100%;
        height: 100%;
    }

    .gallery-item-modal-content {
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
    }

    .gallery-item-modal-image {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        object-fit: contain;
    }

    .close-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        color: var(--color-text-reverse);
        cursor: pointer;
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
</style>